<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootv2.dao.MetasDao">
    <sql id="BASE_TABLE">
        t_metas
    </sql>
    <sql id="BASE_COLUMN">
        m.mid, m.name, m.slug, m.type, m.description, m.sort, m.parent
    </sql>
    <sql id="RELATION_TABLE">
        t_relationships
    </sql>
<!--  add Meta-->
    <insert id="addMeta" parameterType="com.example.springbootv2.model.MetaMD" useGeneratedKeys="true" keyProperty="mid">
        insert into
        <include refid="BASE_TABLE"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            name,slug,type,contentType,description,sort,parent
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            #{name},#{slug},#{type},#{contentType},#{description},#{sort},#{parent}
        </trim>
    </insert>
<!--    delete meta-->
    <delete id="deleteMetaById" parameterType="int">
        delete from
        <include refid="BASE_TABLE"/>
        where mid = #{mid}
    </delete>
<!--    update meta-->
    <update id="updateMeta" parameterType="com.example.springbootv2.model.MetaMD">
        update
        <include refid="BASE_TABLE"/>
        <set>
            <if test="name != null">
                name = #{name, jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug, jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type, jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description, jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort, jdbcType=INTEGER},
            </if>
            <if test="parent != null">
                parent = #{parent, jdbcType=INTEGER},
            </if>
        </set>
        WHERE mid = #{mid, jdbcType=INTEGER}
    </update>
<!--    get meta-->
    <select id="getMetaById" resultType="com.example.springbootv2.model.MetaMD">
        select
        <include refid="BASE_COLUMN"/>
        from
        <include refid="BASE_TABLE"/> AS m
        where mid = #{mid}
    </select>

<!--    getMetasByCond-->
    <select id="getMetasByCond"
            parameterType="com.example.springbootv2.dto.cond.MetaCond"
            resultType="com.example.springbootv2.model.MetaMD">
        select
        <include refid="BASE_COLUMN"/>
        from
        <include refid="BASE_TABLE"/> AS m
        <where>
            <if test="name!=null">
                AND m.name = #{name}
            </if>
            <if test="type!=null">
                AND m.type = #{type}
            </if>
        </where>
        ORDER BY m.sort
    </select>
<!--    getMetasCountByType-->
    <select id="getMetasCountByType" resultType="java.lang.Long">
        select count(*)
        from
        <include refid="BASE_TABLE"/>
        WHERE type = #{type,jdbcType = VARCHAR}
    </select>
<!--    select from sql-->
    <resultMap id="BaseResultMap" type="com.example.springbootv2.model.MetaMD">
        <id column="mid" jdbcType="INTEGER" property="mid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="slug" jdbcType="VARCHAR" property="slug"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="parent" jdbcType="INTEGER" property="parent"/>
    </resultMap>
    <resultMap id="MetaDto" type="com.example.springbootv2.dto.MetaDto" extends="BaseResultMap">
        <result column="count" jdbcType="INTEGER" property="count"/>
    </resultMap>
    <select id="selectFromSql" resultMap="MetaDto" parameterType="Map">
        select a.*,count(*) as count
        from <include refid="BASE_TABLE"/> AS a
        left join <include refid="RELATION_TABLE"/> AS b
        on a.mid = b.mid
        where a.type = #{type}
        group by a.mid
        order by #{order}
        limit #{limit}
    </select>
</mapper>
